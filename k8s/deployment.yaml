# Postgres
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgresql
spec:
  selector:
    matchLabels:
      app: postgresql
  template:
    metadata:
      labels:
        app: postgresql
    spec:
      containers:
        - name: postgres
          image: postgres:14.3
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_PASSWORD
              value: "tempdev"
            - name: POSTGRES_USER
              value: "kubenews"
            - name: POSTGRES_DB
              value: "kubenews"
---
apiVersion: v1
kind: Service
metadata:
  name: postgresql
spec:
  selector:
    app: postgresql
  ports:
    - port: 5432
      targetPort: 5432
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubenews
spec:
  replicas: 10
  selector:
    matchLabels:
      app: kubenews
  template:
    metadata:
      labels:
        app: kubenews
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"

    spec:
      containers:
      - name: kubenews
        image: seishuku/kube_news:v1
        env:
          - name: DB_DATABASE
            value: "kubenews"
          - name: DB_USERNAME
            value: "kubenews"
          - name: DB_PASSWORD
            value: "tempdev"
          - name: DB_HOST
            value: "postgresql"
        ports:
        - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: kubenews
spec:
  selector:
    app: kubenews
  ports:
    - port: 80
      targetPort: 8080 
      nodePort: 30000
  type: LoadBalancer